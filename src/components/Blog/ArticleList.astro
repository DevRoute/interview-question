---
interface Article {
  title: string
  url: string
  category: string
}

interface Props {
  articles: Article[]
  currentCategory: string
}

const { articles, currentCategory } = Astro.props

// 按分类分组文章
const groupedArticles = articles.reduce(
  (acc, article) => {
    if (!acc[article.category]) {
      acc[article.category] = []
    }
    acc[article.category].push(article)
    return acc
  },
  {} as Record<string, Article[]>
)
---

<nav class="space-y-6">
  <h2 class="text-xl font-bold mb-4">{currentCategory}</h2>
  {
    Object.entries(groupedArticles).map(([category, categoryArticles]) => (
      <div class="space-y-2">
        <h3 class="font-semibold text-gray-700 dark:text-gray-300">{category}</h3>
        <ul class="space-y-2">
          {categoryArticles.map((article) => (
            <li>
              <a
                href={article.url}
                class="block py-1 px-2 rounded hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
                aria-current={article.url === Astro.url.pathname ? 'page' : undefined}
              >
                {article.title}
              </a>
            </li>
          ))}
        </ul>
      </div>
    ))
  }
</nav>

<style>
  [aria-current='page'] {
    @apply bg-gray-100 dark:bg-gray-800 font-medium;
  }
</style>
